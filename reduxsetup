Setting up Redux Toolkit in a React app created with Vite is straightforward. Here’s a step-by-step guide:

1. Install Dependencies
First, make sure you have your Vite app set up. If you haven't done that yet, you can create a new Vite app with:

bash
Copy code
npm create vite@latest my-app --template react
cd my-app
npm install
Next, install Redux Toolkit and React-Redux:

bash
Copy code
npm install @reduxjs/toolkit react-redux
2. Create a Redux Slice
Create a folder for your Redux logic. For example, create a folder named features in the src directory, and then create a slice.

src/features/mySlice.js

javascript
Copy code
import { createSlice } from '@reduxjs/toolkit';

const mySlice = createSlice({
  name: 'mySlice',
  initialState: {
    value: 0,
  },
  reducers: {
    increment: (state) => {
      state.value += 1;
    },
    decrement: (state) => {
      state.value -= 1;
    },
    setValue: (state, action) => {
      state.value = action.payload;
    },
  },
});

export const { increment, decrement, setValue } = mySlice.actions;
export default mySlice.reducer;
3. Configure the Store
Next, create a store to hold your Redux state.

src/app/store.js

javascript
Copy code
import { configureStore } from '@reduxjs/toolkit';
import myReducer from '../features/mySlice';

const store = configureStore({
  reducer: {
    mySlice: myReducer,
  },
});

export default store;
4. Provide the Store to Your App
Wrap your application with the Provider component from React-Redux in your main entry file.

src/main.jsx

javascript
Copy code
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { Provider } from 'react-redux';
import store from './app/store';

ReactDOM.createRoot(document.getElementById('root')).render(
  <Provider store={store}>
    <App />
  </Provider>
);
5. Use Redux State in Your Components
Now you can use Redux state and dispatch actions in your components using hooks.

src/App.jsx

javascript
Copy code
import React from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { increment, decrement } from './features/mySlice';

const App = () => {
  const dispatch = useDispatch();
  const value = useSelector((state) => state.mySlice.value);

  return (
    <div>
      <h1>Value: {value}</h1>
      <button onClick={() => dispatch(increment())}>Increment</button>
      <button onClick={() => dispatch(decrement())}>Decrement</button>
    </div>
  );
};

export default App;
6. Run Your App
Finally, run your app to see everything in action:

bash
Copy code
npm run dev
Summary
You’ve now set up Redux Toolkit in your Vite React app! You can create slices for different pieces of state and manage them efficiently using Redux Toolkit's features.